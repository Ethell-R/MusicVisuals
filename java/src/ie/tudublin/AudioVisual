import java.awt.*;
import java.awt.geom.*;
import javax.swing.*;

public class Visualizer extends JFrame {

    private static final int WIDTH = 800;
    private static final int HEIGHT = 600;
    private static final int NUM_POINTS = 100;
    private static final int POINT_SIZE = 10;

    private int[] data = new int[NUM_POINTS];

    public Visualizer() {
        setTitle("Parasite Eve Visualizer");
        setSize(WIDTH, HEIGHT);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        setLocationRelativeTo(null);
        setVisible(true);
    }

    public void setData(int[] newData) {
        data = newData;
        repaint();
    }

    @Override
    public void paint(Graphics g) {
        Graphics2D g2d = (Graphics2D) g;

        // Draw background
        g2d.setColor(Color.BLACK);
        g2d.fillRect(0, 0, WIDTH, HEIGHT);

        // Draw points
        int xSpacing = WIDTH / (NUM_POINTS - 1);
        for (int i = 0; i < NUM_POINTS; i++) {
            int x = i * xSpacing;
            int y = HEIGHT - data[i];
            g2d.setColor(getColorFromIndex(i));
            g2d.fill(new Ellipse2D.Double(x - POINT_SIZE / 2, y - POINT_SIZE / 2, POINT_SIZE, POINT_SIZE));
        }
    }

    private Color getColorFromIndex(int index) {
        float hue = (float) index / NUM_POINTS;
        return Color.getHSBColor(hue, 1f, 1f);
    }

    public static void main(String[] args) {
        Visualizer visualizer = new Visualizer();

        // Generate sample data
        int[] data = new int[NUM_POINTS];
        for (int i = 0; i < NUM_POINTS; i++) {
            data[i] = (int) (Math.random() * HEIGHT);
        }
        visualizer.setData
